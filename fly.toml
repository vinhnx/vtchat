# Production fly.toml - Multi-region deployment
app = 'vtchat'

primary_region = 'sin'

# Multi-region setup:
# - sin: Singapore (Asia-Pacific) - Primary region
# - iad: Ashburn, Virginia (USA) - Secondary region
# Machines are cloned with identical config, auto-scale based on traffic
#
# --- COST OPTIMIZATION ---
# To keep costs under $5/month:
# - Keep min_machines_running = 0 (machines suspend when idle)
# - Use shared CPUs and 512MB RAM (lowest tier)
# - Avoid running more than 2 machines at once
# - Monitor usage in Fly.io dashboard
# - Heavy traffic or always-on machines will increase cost
# - For lowest cost, let machines auto-suspend and only wake on demand

fly status -a "$APP_NAME"[build]



echo ""[env]

echo "üí° Cost Interpretation:"# Disable detailed request logging

echo ""# Only errors/warnings, not requests

echo "Machine States:"LOG_LEVEL = "warn"

echo "  ‚Ä¢ suspended = ‚úÖ $0/hour (not running)"NODE_ENV = 'production'

echo "  ‚Ä¢ started   = üíµ $0.0000015/second per 512MB machine"BASE_URL = 'https://vtchat.io.vn'

echo "  ‚Ä¢ stopped   = ‚úÖ $0/hour (manually stopped)"BETTER_AUTH_URL = 'https://vtchat.io.vn'

echo ""NEXT_PUBLIC_BASE_URL = 'https://vtchat.io.vn'

APP_URL = 'https://vtchat.io.vn'

# Calculate potential costsNEXT_PUBLIC_APP_URL = 'https://vtchat.io.vn'

echo "üìä Cost Estimates (512MB RAM per machine):"NEXT_PUBLIC_COMMON_URL = 'https://vtchat.io.vn'

echo ""NEXT_PUBLIC_BETTER_AUTH_URL = 'https://vtchat.io.vn'

echo "If machines run:"CREEM_ENVIRONMENT = 'production'

echo "  ‚Ä¢ 1 hour/day   = ~$0.32/month per machine"BETTER_AUTH_ENV = 'production'

echo "  ‚Ä¢ 2 hours/day  = ~$0.65/month per machine"

echo "  ‚Ä¢ 4 hours/day  = ~$1.29/month per machine"# Node.js memory optimizations

echo "  ‚Ä¢ 8 hours/day  = ~$2.58/month per machine"NODE_OPTIONS = '--max-old-space-size=512 --max-semi-space-size=64'

echo "  ‚Ä¢ 12 hours/day = ~$3.87/month per machine"# Disable Next.js telemetry to save memory

echo "  ‚Ä¢ 24/7         = ~$7.74/month per machine"NEXT_TELEMETRY_DISABLED = '1'

echo ""# Reduce garbage collection frequency for better performance

echo "With 2 machines:"UV_THREADPOOL_SIZE = '4'

echo "  ‚Ä¢ Low traffic (2h/day):     ~$1.30/month ‚úÖ"

echo "  ‚Ä¢ Medium traffic (8h/day):  ~$5.16/month ‚ö†Ô∏è"[http_service]

echo "  ‚Ä¢ High traffic (12h/day):   ~$7.74/month ‚ö†Ô∏è"internal_port = 3000

echo "  ‚Ä¢ Always on (24/7):         ~$15.48/month ‚ùå"force_https = true

echo ""auto_stop_machines = 'suspend'

auto_start_machines = true

echo "üéØ Target: <$5/month = 2 machines running <8 hours/day combined"min_machines_running = 0

echo ""processes = ['app']



echo "üì± Quick Actions:"[[http_service.checks]]

echo ""grace_period = "15s"

echo "1. View detailed billing:"interval = "60s"

echo "   open https://fly.io/dashboard/personal/billing"method = "GET"

echo ""timeout = "10s"

echo "2. View machine logs:"path = "/api/health"

echo "   fly logs -a $APP_NAME"

echo ""[[http_service.checks]]

echo "3. Check machine uptime:"type = "tcp"

echo "   fly machine status <machine-id> -a $APP_NAME"grace_period = "5s"

echo ""interval = "30s"

echo "4. If costs are too high:"timeout = "2s"

echo "   ‚Ä¢ Reduce to single region: fly machines destroy <machine-id> -a $APP_NAME"

echo "   ‚Ä¢ Reduce memory: Edit fly.toml, set memory = '256mb', run fly deploy"[[vm]]

echo "   ‚Ä¢ Increase suspend time: Edit health check intervals in fly.toml"memory = '512mb'

echo ""cpu_kind = 'shared'

cpus = 1

# Check if machines are currently running
echo "üîç Current Machine States:"
MACHINES=$(fly machines list -a "$APP_NAME" -j 2>/dev/null || echo "[]")

if [[ "$MACHINES" == "[]" ]]; then
    echo "   ‚ö†Ô∏è  Could not fetch machine status (flyctl may need authentication)"
else
    RUNNING_COUNT=$(echo "$MACHINES" | grep -c '"state": "started"' || echo "0")
    SUSPENDED_COUNT=$(echo "$MACHINES" | grep -c '"state": "suspended"' || echo "0")

    echo "   ‚Ä¢ Running: $RUNNING_COUNT machines = üíµ Actively costing money"
    echo "   ‚Ä¢ Suspended: $SUSPENDED_COUNT machines = ‚úÖ Not costing money"

    if [[ $RUNNING_COUNT -eq 0 ]]; then
        echo ""
        echo "   ‚úÖ All machines suspended - Excellent for cost savings!"
    elif [[ $RUNNING_COUNT -eq 1 ]]; then
        echo ""
        echo "   üí° One machine active - Normal if you just accessed the app"
    else
        echo ""
        echo "   ‚ö†Ô∏è  Multiple machines running - May indicate active traffic"
    fi
fi

echo ""
echo "üìÖ Monitor costs for 7 days to get accurate usage patterns"
